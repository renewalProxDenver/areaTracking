Basic instructions on installing Git (we are using Windows)
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git

Here are some of the options used when installing Git in Longmont
32 bit Git
Desktop icon (y)
Use git from Git Bash only
	(Use Git from the Windows Command Prompt is a likely safe option, nobody will ever use it anyway)
Use open SSL Library
Checkout Windows style (recommended setting on Windows)
Use MinTTY (this setting works fine for what we need to do)

Here are some more details on what Git is and how we can use it:
https://git-scm.com/book/en/v2

Using Git to load the latest master data for immediate edits
Commands that are to be run in Git Bash are preceded with a $
$ git config --global user.name "proxteamlead"
$ git config --global user.email srussell@renewalcolorado.com

Load the existing maps and notes to your desktop
The path to the desktop will vary based on the work station you are using.
//rba-col-dc01/redirectedfolders/ccrowe/desktop is the path for Cam Crowe's
work computer station.
$ cd //rba-col-dc01/redirectedfolders/ccrowe/desktop
$ git clone https://github.com/renewalProxDenver/areaTracking.git
$ cd areaTracking

The previous commands loaded the latest information on to the desktop into
a folder named areaTracking. We then moved to that folder.

Now, open the master map from the file that we downloaded.
After you have made all edits that you would like to post to the master
map save the file.
The following command will commit all of your daily changes with 
a message detailing the changes:
$ git commit -a -m "[A message detailing what you changed]"
The commit message is held in quotes. Initially it may make sense
to include the team that did the update as well as the date it was updated
such as "CC update 5/6/2018". This way we know that team last updated
their info on that date.

The previous line will not update the master file but only stage 
changes for the next command.
$ git push

At this point we may be prompted for username and/or password

Assuming everything has worked then that is it. 
We have changed the master map, staged our edits, and then
posted our edits to the master file for other users.

At this point we have cloned the current master, made some changes, and then merged everything together.
From here on out we will make sure we have the latest master, edit that, and then push our edits.
The first step we be to make sure we have the latest master data.
$ git pull

From there we add our edits and run the same last two lines to stage our 
edits and then push to the master repository.

$ git commit -a -m "[Team] update [Date]"
$ git push
